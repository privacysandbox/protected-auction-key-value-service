# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = [
    "//tools:__subpackages__",
])

cc_library(
    name = "command",
    hdrs = ["command.h"],
    deps = [],
)

cc_library(
    name = "format_data_command",
    srcs = ["format_data_command.cc"],
    hdrs = ["format_data_command.h"],
    copts = [
        "-fexceptions",
        "-Wno-error",
        "-Wno-implicit-fallthrough",
        "-Wno-non-virtual-dtor",
    ],
    deps = [
        ":command",
        "//public/data_loading/csv:csv_delta_record_stream_reader",
        "//public/data_loading/csv:csv_delta_record_stream_writer",
        "//public/data_loading/readers:avro_delta_record_stream_reader",
        "//public/data_loading/readers:delta_record_reader",
        "//public/data_loading/readers:delta_record_stream_reader",
        "//public/data_loading/writers:avro_delta_record_stream_writer",
        "//public/data_loading/writers:delta_record_stream_writer",
        "//public/data_loading/writers:delta_record_writer",
        "//public/sharding:sharding_function",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@google_privacysandbox_servers_common//src/util/status_macro:status_macros",
    ],
)

cc_test(
    name = "format_data_command_test",
    size = "small",
    srcs = ["format_data_command_test.cc"],
    deps = [
        ":format_data_command",
        "//public/data_loading/csv:csv_delta_record_stream_reader",
        "//public/data_loading/csv:csv_delta_record_stream_writer",
        "//public/data_loading/readers:delta_record_stream_reader",
        "//public/data_loading/writers:delta_record_stream_writer",
        "//public/test_util:data_record",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "generate_snapshot_command",
    srcs = ["generate_snapshot_command.cc"],
    hdrs = ["generate_snapshot_command.h"],
    copts = [
        "-fexceptions",
    ],
    deps = [
        ":command",
        "//components/data/blob_storage:blob_storage_client",
        "//public:constants",
        "//public/data_loading:filename_utils",
        "//public/data_loading:riegeli_metadata_cc_proto",
        "//public/data_loading/readers:delta_record_stream_reader",
        "//public/data_loading/writers:snapshot_stream_writer",
        "//public/sharding:sharding_function",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)
