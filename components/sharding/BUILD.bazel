# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = [
    "//components:__subpackages__",
    "//tools:__subpackages__",
])

cc_library(
    name = "shard_manager",
    srcs =
        [
            "shard_manager.cc",
        ],
    hdrs = [
        "shard_manager.h",
    ],
    deps = [
        "//components/internal_server:remote_lookup_client_impl",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/strings",
        "@google_privacysandbox_servers_common//src/logger:request_context_logger",
    ],
)

cc_test(
    name = "shard_manager_test",
    size = "small",
    srcs =
        [
            "shard_manager_test.cc",
        ],
    deps = [
        ":mocks",
        ":shard_manager",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@google_privacysandbox_servers_common//src/encryption/key_fetcher:fake_key_fetcher_manager",
    ],
)

cc_library(
    name = "mocks",
    testonly = 1,
    hdrs = ["mocks.h"],
    deps = [
        ":shard_manager",
        "@com_google_googletest//:gtest",
    ],
)

cc_library(
    name = "cluster_mappings_manager",
    srcs = select({
        "//:gcp_platform": ["cluster_mappings_manager_gcp.cc"],
        "//conditions:default": ["cluster_mappings_manager_aws.cc"],
    }) + ["cluster_mappings_manager.cc"],
    hdrs = [
        "cluster_mappings_manager.h",
    ],
    deps = [
        ":shard_manager",
        "//components/cloud_config:instance_client",
        "//components/data/common:thread_manager",
        "//components/data_server/server:parameter_fetcher",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/strings",
        "@google_privacysandbox_servers_common//src/errors:retry",
        "@google_privacysandbox_servers_common//src/logger:request_context_logger",
    ],
)

cc_test(
    name = "cluster_mappings_manager_test",
    size = "small",
    srcs = select({
        "//:gcp_platform": ["cluster_mappings_manager_gcp_test.cc"],
        "//conditions:default": ["cluster_mappings_manager_aws_test.cc"],
    }),
    deps = [
        ":cluster_mappings_manager",
        ":mocks",
        "//components/data_server/server:mocks",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@google_privacysandbox_servers_common//src/encryption/key_fetcher:fake_key_fetcher_manager",
    ],
)
