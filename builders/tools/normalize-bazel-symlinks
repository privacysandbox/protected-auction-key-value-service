#!/usr/bin/env bash

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

declare -r BAZEL_CACHE_DIR="${HOME}/.cache/bazel"

function normalize_symlink() {
  declare -r link_name="$1"
  if readlink --canonicalize-existing "${link_name}" &>/dev/null ; then
    printf "symlink %s resolves fully, skipping\n" "${link_name}"
    return
  fi
  local -r link_path="$(readlink "${link_name}")"
  local -r output_user_root="${link_path///bazel_root/}"
  rm -f "${link_name}"
  ln -s "$(realpath "${BAZEL_CACHE_DIR}/${output_user_root}")" "${link_name}"
}

function normalize_symlink_docker() {
  declare -r link_name="$1"
  if readlink --canonicalize-existing "${link_name}" &>/dev/null ; then
    printf "symlink %s resolves fully, skipping\n" "${link_name}"
    return
  fi
  local -r link_path="$(readlink "${link_name}")"
  local -r output_user_root="${link_path##*/.cache/bazel/}"
  rm -f "${link_name}"
  ln -s "$(realpath "/bazel_root/${output_user_root}")" "${link_name}"
}

declare _normalize_fn=normalize_symlink
if [[ -f /.dockerenv ]]; then
  _normalize_fn=normalize_symlink_docker
fi

source "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"/builder.sh
cd "${WORKSPACE}" || true

declare -a links
mapfile -t links < <(find . -maxdepth 1 -type l -name "bazel-*" -exec basename {} \;)
for link in "${links[@]}"; do
  ${_normalize_fn} "${link}"
done
