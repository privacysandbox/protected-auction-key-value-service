# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = [
    "//components:__subpackages__",
])

cc_library(
    name = "data_orchestrator",
    srcs = [
        "data_orchestrator.cc",
    ],
    hdrs = [
        "data_orchestrator.h",
    ],
    deps = [
        "//components/data/blob_storage:blob_prefix_allowlist",
        "//components/data/blob_storage:blob_storage_change_notifier",
        "//components/data/blob_storage:blob_storage_client",
        "//components/data/blob_storage:delta_file_notifier",
        "//components/data/file_group:file_group_search_utils",
        "//components/data/realtime:realtime_notifier",
        "//components/data/realtime:realtime_thread_pool_manager",
        "//components/data_server/cache",
        "//components/udf:udf_client",
        "//public:constants",
        "//public/data_loading:data_loading_fbs",
        "//public/data_loading:filename_utils",
        "//public/data_loading:records_utils",
        "//public/data_loading/readers:riegeli_stream_io",
        "//public/data_loading/readers:stream_record_reader_factory",
        "//public/sharding:key_sharder",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@google_privacysandbox_servers_common//src/errors:retry",
        "@google_privacysandbox_servers_common//src/telemetry:tracing",
        "@google_privacysandbox_servers_common//src/util/status_macro:status_macros",
    ],
)

cc_test(
    name = "data_orchestrator_test",
    size = "small",
    srcs = [
        "data_orchestrator_test.cc",
    ],
    deps = [
        ":data_orchestrator",
        "//components/data/common:mocks",
        "//components/data_server/cache:mocks",
        "//components/udf:code_config",
        "//components/udf:mocks",
        "//public/data_loading:filename_utils",
        "//public/data_loading:records_utils",
        "//public/test_util:data_record",
        "//public/test_util:mocks",
        "//public/test_util:proto_matcher",
        "@com_google_absl//absl/log",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)
