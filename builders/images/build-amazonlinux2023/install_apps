#!/bin/bash

set -o pipefail
set -o errexit

VERBOSE=0

usage() {
  local exitval=${1-1}
  cat >&2 << USAGE
usage:
  $0 <options>
    --verbose                     Emit verbose info. Default: false
USAGE
  # shellcheck disable=SC2086
  exit ${exitval}
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    --verbose)
      VERBOSE=1
      shift
      ;;
    -h | --help) usage 0 ;;
    *) usage ;;
  esac
done

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
readonly SCRIPT_DIR
# shellcheck disable=SC1090
. "${SCRIPT_DIR}"/install_go.sh

function dnf_update() {
  dnf -y update
}

function install_python() {
  mkdir -p /opt/bin
  alternatives \
    --install /opt/bin/python3 python3-opt /usr/bin/python3.9 100 \
    --slave /usr/bin/python3 python3-usr /usr/bin/python3.9 \
    --slave /usr/bin/python python-usr /usr/bin/python3.9 \
    --slave /opt/bin/python python /usr/bin/python3.9
}

function install_nitro() {
  local -r arch="$1"
  local -r -A extensions=(
    [amd64]="x86_64"
    [arm64]="aarch64"
  )
  local -r ext="${extensions[${arch}]}"
  if [[ -z ${ext} ]]; then
    printf "Unrecognized or unsupported architecture for nitro: %s\n" "${arch}" &>/dev/stderr
    return 1
  fi
  dnf install -y \
    "aws-nitro-enclaves-cli-1.3.1-0.amzn2023.${ext}" \
    "aws-nitro-enclaves-cli-devel-1.3.1-0.amzn2023.${ext}"
}

function install_gcc() {
  # install gcc, which is required to build socat
  dnf install -y "gcc-11.3.*"
}

function install_misc() {
  dnf install -y \
    "gettext-0.21*" \
    "git-2.40.*" \
    "tar-2:1.34*" \
    "unzip-6.0*" \
    "which-2.*" \
    "zip-3.0*"
}

function install_packer() {
  dnf install -y "dnf-utils-4.1.*"
  dnf config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
  dnf -y install "packer-1.9.2*"
  update-alternatives --install /usr/local/bin/packer packer /usr/bin/packer 100
  /usr/local/bin/packer version
}

function install_clang() {
  dnf install -y "clang-15.*"
  clang --version
}

function cleanup() {
  cd /
  go clean -cache -modcache
}

if [[ ${VERBOSE} -eq 1 ]]; then
  printf "=== SHELL ENVIRONMENT ===\n"
  env
fi

install_python
dnf_update
install_nitro "${BUILD_ARCH}"
install_misc
install_clang
install_golang "${BUILD_ARCH}"
install_gcc
install_packer
cleanup
