# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load(
    "@com_github_google_flatbuffers//:build_defs.bzl",
    "flatbuffer_cc_library",
)
load("@rules_buf//buf:defs.bzl", "buf_lint_test")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_proto_library", "cc_test")
load("@rules_proto//proto:defs.bzl", "proto_descriptor_set", "proto_library")

package(default_visibility = ["//visibility:public"])

flatbuffer_cc_library(
    name = "data_loading_fbs",
    srcs = ["data_loading.fbs"],
    # https://flatbuffers.dev/flatbuffers_guide_using_schema_compiler.html
    flatc_args = [
        "--cpp-std c++17",
        "--gen-object-api",
        "--gen-compare",
    ],
)

proto_library(
    name = "riegeli_metadata_proto",
    srcs = ["riegeli_metadata.proto"],
    deps = [
        "//public:base_types_proto",
        "@com_google_riegeli//riegeli/records:records_metadata_proto",
    ],
)

buf_lint_test(
    name = "riegeli_metadata_proto_lint",
    size = "small",
    config = "//:buf.yaml",
    targets = [":riegeli_metadata_proto"],
)

cc_library(
    name = "record_utils",
    srcs = ["record_utils.cc"],
    hdrs = ["record_utils.h"],
    deps = [
        ":data_loading_fbs",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "record_utils_test",
    size = "small",
    srcs = ["record_utils_test.cc"],
    deps = [
        ":record_utils",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_googletest//:gtest_main",
    ],
)

proto_descriptor_set(
    name = "riegeli_metadata_descriptor_set",
    deps = [":riegeli_metadata_proto"],
)

cc_proto_library(
    name = "riegeli_metadata_cc_proto",
    deps = [":riegeli_metadata_proto"],
)

cc_library(
    name = "filename_utils",
    srcs = ["filename_utils.cc"],
    hdrs = ["filename_utils.h"],
    deps = [
        "//public:base_types_cc_proto",
        "//public:constants",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "filename_utils_test",
    size = "small",
    srcs = [
        "filename_utils_test.cc",
    ],
    deps = [
        ":filename_utils",
        "@com_google_googletest//:gtest_main",
    ],
)
