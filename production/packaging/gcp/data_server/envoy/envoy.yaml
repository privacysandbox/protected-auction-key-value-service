# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

static_resources:
  listeners:
  - name: server_listener
    per_connection_buffer_limit_bytes: 52428800
    address:
      socket_address: { address: 0.0.0.0, port_value: 51052 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: envoy_router
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: [ "*" ]
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods:  GET, POST, PUT, OPTIONS
                allow_headers: Origin, Content, Accept, Content-Type, Authorization, X-Requested-With
                allow_credentials: true
              routes:
              - match: { prefix: "/", headers: [ { name: ":method", exact_match: "OPTIONS" } ] }
                # fake cluster route ... some issue in envoy.
                route: { cluster: "grpc_cluster", timeout: 60s }
              - match: { prefix: "/kv_server.v1.KeyValueService" }
                route: { cluster: grpc_cluster, timeout: 60s }
              - match: { prefix: "/kv_server.v2.KeyValueService" }
                route: { cluster: grpc_cluster, timeout: 60s }
              - match: { prefix: "/grpc.reflection.v1alpha.ServerReflection" }
                route: { cluster: grpc_cluster, timeout: 60s }
              retry_policy:
                retry_on: 5xx
                num_retries: 10
            request_headers_to_add:
            - header:
                key: "kv-content-type"
                value: "%DYNAMIC_METADATA(tkv:content-type)%"
            response_headers_to_add:
            - header:
                key: 'Ad-Auction-Allowed'
                value: 'true'
              append: false
            - header:
                key: 'x-fledge-bidding-signals-format-version'
                value: '2'
              append: false
            - header:
                key: 'Access-Control-Allow-Origin'
                value: '*'
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          # Pass the content-type to the grpc server. By default the header is overwritten to "application/grpc"
          # This extra filter must be used because the content-type must be copied to a metadata prior to grpc transcoding
          # By the time the Router filter is invoked, the original content-type is already changed.
          - name: envoy.filters.http.header_to_metadata
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config
              request_rules:
              - header: "content-type"
                on_header_present:
                  metadata_namespace: tkv
                  key: content-type
                  type: STRING
                on_header_missing:
                  metadata_namespace: tkv
                  key: content-type
                  value: 'unknown'
                  type: STRING
          - name: envoy.filters.http.grpc_stats,
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
              stats_for_all_methods: true
              enable_upstream_stats: true
          - name: envoy.filters.http.grpc_json_transcoder
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
              proto_descriptor: "/etc/envoy/query_api_descriptor_set.pb"
              services:
              - kv_server.v1.KeyValueService
              - kv_server.v2.KeyValueService
              print_options:
                add_whitespace: true
                always_print_primitive_fields: true
                always_print_enums_as_ints: false
                preserve_proto_field_names: false
              request_validation_options:
                reject_unknown_method: true
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: {filename: "/etc/envoy/cert.pem"}
              private_key: {filename: "/etc/envoy/key.pem"}

  clusters:
  - name: grpc_cluster
    connect_timeout: 60s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    dns_lookup_family: V4_ONLY
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: { }
    load_assignment:
      cluster_name: grpc_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 50051
