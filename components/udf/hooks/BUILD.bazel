# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = [
    "//components:__subpackages__",
    "//tools:__subpackages__",
])

cc_library(
    name = "get_values_hook",
    srcs = [
        "get_values_hook.cc",
    ],
    hdrs = [
        "get_values_hook.h",
    ],
    deps = [
        "//components/internal_server:internal_lookup_cc_proto",
        "//components/internal_server:local_lookup",
        "//components/internal_server:lookup",
        "//components/util:request_context",
        "//public/udf:binary_get_values_cc_proto",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_protobuf//:protobuf",
        "@google_privacysandbox_servers_common//src/roma/interface",
        "@nlohmann_json//:lib",
    ],
)

cc_library(
    name = "run_query_hook",
    hdrs = [
        "run_query_hook.h",
    ],
    deps = [
        "//components/internal_server:internal_lookup_cc_proto",
        "//components/internal_server:lookup",
        "//components/util:request_context",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@google_privacysandbox_servers_common//src/roma/interface",
        "@google_privacysandbox_servers_common//src/roma/interface:function_binding_io_cc_proto",
        "@nlohmann_json//:lib",
    ],
)

cc_library(
    name = "logging_hook",
    srcs = [
        "logging_hook.h",
    ],
    deps = [
        "//components/util:request_context",
        "@com_google_absl//absl/log",
    ],
)

cc_library(
    name = "custom_metric_hook",
    srcs = [
        "custom_metric_hook.h",
    ],
    deps = [
        "//components/util:request_context",
        "@com_google_absl//absl/log",
    ],
)

cc_test(
    name = "get_values_hook_test",
    size = "small",
    srcs = [
        "get_values_hook_test.cc",
    ],
    deps = [
        ":get_values_hook",
        "//components/internal_server:mocks",
        "//public/test_util:proto_matcher",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "run_query_hook_test",
    size = "small",
    srcs = [
        "run_query_hook_test.cc",
    ],
    deps = [
        ":run_query_hook",
        "//components/internal_server:mocks",
        "//public/test_util:proto_matcher",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)
