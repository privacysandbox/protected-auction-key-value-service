# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = [
    "//components/data_server:__subpackages__",
    "//tools:__subpackages__",
])

cc_library(
    name = "code_config",
    srcs = [
        "code_config.cc",
    ],
    hdrs = ["code_config.h"],
    deps = [
    ],
)

cc_library(
    name = "udf_client",
    srcs = [
        "udf_client.cc",
    ],
    hdrs = [
        "udf_client.h",
    ],
    deps = [
        ":code_config",
        "//components/errors:error_tag",
        "//components/errors:retry",
        "//components/udf/hooks:get_values_hook",
        "//components/udf/hooks:run_query_hook",
        "//public:api_schema_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_protobuf//:protobuf",
        "@google_privacysandbox_servers_common//src/logger:request_context_logger",
        "@google_privacysandbox_servers_common//src/roma/interface",
        "@google_privacysandbox_servers_common//src/roma/roma_service",
        "@google_privacysandbox_servers_common//src/util:duration",
    ],
)

cc_library(
    name = "noop_udf_client",
    srcs = [
        "noop_udf_client.cc",
    ],
    hdrs = [
        "noop_udf_client.h",
    ],
    visibility = ["//components/tools:__subpackages__"],
    deps = [
        ":code_config",
        ":udf_client",
        "//components/errors:retry",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "udf_config_builder",
    srcs = [
        "udf_config_builder.cc",
    ],
    hdrs = [
        "udf_config_builder.h",
    ],
    deps = [
        ":code_config",
        "//components/udf/hooks:get_values_hook",
        "//components/udf/hooks:logging_hook",
        "//components/udf/hooks:run_query_hook",
        "@google_privacysandbox_servers_common//src/roma/interface",
        "@google_privacysandbox_servers_common//src/roma/roma_service",
    ],
)

cc_test(
    name = "udf_client_test",
    size = "small",
    srcs = [
        "udf_client_test.cc",
    ],
    data = [
        "//components/test_data:add.wasm",
    ],
    deps = [
        ":code_config",
        ":mocks",
        ":udf_client",
        ":udf_config_builder",
        "//components/internal_server:mocks",
        "//components/udf/hooks:get_values_hook",
        "//components/udf/hooks:run_query_hook",
        "//public/query/v2:get_values_v2_cc_proto",
        "//public/test_util:proto_matcher",
        "//public/test_util:request_example",
        "//public/udf:constants",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@google_privacysandbox_servers_common//src/roma/interface",
        "@google_privacysandbox_servers_common//src/roma/roma_service",
        "@io_opentelemetry_cpp//exporters/ostream:ostream_log_record_exporter",
    ],
)

cc_library(
    name = "mocks",
    testonly = 1,
    hdrs = ["mocks.h"],
    deps = [
        ":code_config",
        ":udf_client",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@google_privacysandbox_servers_common//src/roma/interface",
    ],
)
