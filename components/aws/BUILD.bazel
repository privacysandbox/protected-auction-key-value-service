# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load", "oci_push")
load(
    "@rules_pkg//pkg:mappings.bzl",
    "pkg_attributes",
    "pkg_files",
)
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_python//python:defs.bzl", "py_library", "py_test")

py_library(
    name = "sqs_cleanup_manager",
    srcs = ["sqs_cleanup_manager.py"],
)

py_test(
    name = "sqs_cleanup_manager_test",
    size = "small",
    srcs = ["sqs_cleanup_manager_test.py"],
    python_version = "PY3",
    deps = [
        ":sqs_cleanup_manager",
    ],
)

pkg_files(
    name = "lambda_binaries",
    srcs = [
        "sqs_cleanup.py",
        "sqs_cleanup_manager.py",
    ],
    attributes = pkg_attributes(mode = "0555"),
    prefix = "/var/task",  # ${LAMBDA_TASK_ROOT}
)

pkg_tar(
    name = "lambda_binary_tar",
    srcs = [":lambda_binaries"],
)

oci_image(
    name = "sqs_lambda_image",
    base = select({
        "@platforms//cpu:arm64": "@aws-lambda-python-arm64",
        "@platforms//cpu:x86_64": "@aws-lambda-python-amd64",
    }),
    cmd = ["sqs_cleanup.handler"],
    tars = [
        ":lambda_binary_tar",
    ],
)

oci_load(
    name = "sqs_lambda",
    image = ":sqs_lambda_image",
    repo_tags = ["bazel/components/aws:sqs_lambda"],
)

filegroup(
    name = "sqs_lambda_tarball_file",
    srcs = [":sqs_lambda"],
    output_group = "tarball",
)

genrule(
    name = "sqs_lambda_tarball",
    srcs = [":sqs_lambda_tarball_file"],
    outs = ["sqs_lambda.tar"],
    cmd = "cp $< $@",
    visibility = ["//production/packaging:__subpackages__"],
)

oci_push(
    name = "sqs_lambda_push_aws_ecr",
    image = ":sqs_lambda_image",
    remote_tags = ["latest"],
    repository = "$${AWS_ECR}/sqs_lambda",
)

exports_files(
    ["push_sqs"],
)
